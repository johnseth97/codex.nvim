name: CI

on:
  push:
    branches: [main, ci-dev]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Neovim ${{ matrix.neovim }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        neovim: ["stable", "v0.10.0", "nightly"]

    steps:
      - name: Checkout plugin
        uses: actions/checkout@v4

      - name: Install Neovim ${{ matrix.neovim }}
        run: |
          VERSION=${{ matrix.neovim }}
          if [ "$VERSION" = "nightly" ]; then
            URL=https://github.com/neovim/neovim/releases/download/nightly/nvim-linux-x86_64.tar.gz
          elif [ "$VERSION" = "stable" ]; then
            URL=https://github.com/neovim/neovim/releases/download/stable/nvim-linux-x86_64.tar.gz
          else
            URL=https://github.com/neovim/neovim/releases/download/${VERSION}/nvim-linux-x86_64.tar.gz
          fi

          curl -LO "$URL"
          tar xzf nvim-linux-x86_64.tar.gz
          sudo mv nvim-linux-x86_64 /opt/nvim
          echo "/opt/nvim/bin" >> $GITHUB_PATH      - name: Verify Neovim version

      - name: Install Plenary
        run: |
          mkdir -p ~/.local/share/nvim/site/pack/test/start
          git clone https://github.com/nvim-lua/plenary.nvim ~/.local/share/nvim/site/pack/test/start/plenary.nvim

      - name: Install Lua + LuaRocks + luacheck (user-local)
        run: |
          sudo apt-get update
          sudo apt-get install -y lua5.1 liblua5.1-0-dev unzip build-essential

          curl -R -O http://luarocks.org/releases/luarocks-3.9.2.tar.gz
          tar zxpf luarocks-3.9.2.tar.gz
          cd luarocks-3.9.2
          ./configure --lua-version=5.1 --versioned-rocks-dir --prefix=$HOME/.luarocks
          make && make install
          echo "$HOME/.luarocks/bin" >> $GITHUB_PATH
          cd ..
          $HOME/.luarocks/bin/luarocks install luacheck --local

      - name: Lint plugin
        run: luacheck lua/
      - name: Run tests
        run: nvim --headless -u tests/minimal_init.lua -c "PlenaryBustedDirectory tests"

      - name: Upload code coverage
        uses: codecov/codecov-action@v4
        with:
          files: coverage-final.json
          token: ${{ secrets.CODECOV_TOKEN }} # Add to repo secrets
